탐색 알고리즘의 종류

1.  Linear Search Algorithm(선형 탐색 알고리즘)
2.  Binary Search Algorithm(이진 탐색 알고리즘)
3.  Hash Search Algorithm(해시 탐색 알고리즘)
-----------------------------------------------------------------------------------------------------------------------
- 이진 탐색 알고리즘(Binary Search Algorithm)

데이터가 정렬된 상태일 때 범위를 반으로 나눠 분할 정복기법으로 특정값을 찾아내는 알고리즘 

1. 정렬되어 있는 배열에서 중간 인덱스를 지정
2. 찾으려고 하는 값이 지정한 중간 인덱스의 값이라면 탐색을 종료하고, 아니라면 다음 단계로
3. 찾으려고 하는 값이 중간 인덱스의 값보다 큰 값인지, 작은 값인지 확인
4. 찾으려는 값이 존재하는 범위와 그렇지 않은 범위로 분리
5. 찾으려는 값이 존재하는 범위 내에서 1부터 반복 

-> 모든 값을 하나하나 비교하는 선형 탐색 알고리즘에 비해
    중간값을 통해 범위를 나누고 값이 존재하는 범위 내에서만 탐색하기 때문에
    속도가 빠르다. 
-----------------------------------------------------------------------------------------------------------------------
- 이진 탐색 알고리즘은 
                          1. 정렬된 배열에서 값을 더 효율적으로 검색하고자 할 때 사용
                          2. 데이터 양이 많을 때 사용( 효율적)
-----------------------------------------------------------------------------------------------------------------------
- 이진 탐색 알고리즘의 시간 복잡도 : O(log n)
                 데이터가 많을 때는 빠르지만, 
                 데이터양이 적거나 앞쪽에 위치한 데이터를 탐색할 때는 선형 탐색 알고리즘이 더 빠른 경우도 있다. 
-----------------------------------------------------------------------------------------------------------------------
- 이진 탐색 알고리즘의 한계 
: 정렬된 배열에만 구현할 수 있다. 
-----------------------------------------------------------------------------------------------------------------------
- 이진 탐색 알고리즘의 사용 예시 
: 사전에서 단어 검색, 대규모 시스템에 대한 리소스 사항 파악, 반도체 테스트에서 디지털/아날로그 레벨 측정
-----------------------------------------------------------------------------------------------------------------------
- Binary Search Tree vs Binary Search Algorithm

: Tree는 자료구조, Alogorithm은 해결 방법

+) BST: 하나의 노드가 두 개의 하위 트리를 가지는 이진 트리
부모 노드의 값 > 왼쪽 자식 노드의 값 
부모 노드의 값 < 오른쪽 자식 노드의 값
 -----------------------------------------------------------------------------------------------------------------------