객체지향 프로그래밍(Object Oriented Programming)
프로그램 구현에 필요한 객체를 파악하고, 각각의 객체들의 역할이 무엇인지를 정의하여 객체들 간의 상호작용 통해 프로그램을 만드는 것 
특정 사물이 가지는 속성과 기능을 통해 객체를 만들고, 이를 하나씩 하나씩 결합하여 원하는 결과물을 만들어가는 과정

객체(Object)는 실세계에 존재하거나 생각할 수 있는 것을 객체(object)라고 한다.
// 모든 실재하는 어떤 대상
 눈에 보이지 않는 어떤 논리나 개념 같은 것들도 객체라는 범주에 포함될 수 있다
 즉, 객체는 우리가 보고 느끼고 인지할 수 있는 모든 것을 의미한다

컴퓨터 프로그래밍의 관점에서 보면 일련의 명령어들의 나열을 통해 컴퓨터에게 말을 건네는 절차적 프로그래밍 방식과는 다르게, 
객체지향적 프로그래밍은 “프로그래밍에서 필요한 데이터를 한 데 모아 추상화시켜 상태와 행위를 가진 객체를 만들고 
그 객체들 간의 유기적인 상호작용”을 통해 특정 기능을 구성하는 프로그래밍 방법론이다.
->  실제 사물의 속성(state)과 기능(behavior)을 분석한 후에 이것을 프로그래밍의 변수와 함수로 정의함으로 
     실제 세계를 최대한 컴퓨터 프로그래밍에 반영하고자 하는 시도

객체는 하나의 완전하고 독립적인 기능을 가지기 때문에 그 자체로 유용하고 손쉽게 재활용 할 수 있다.
-> 프로그램 개발 및 유지 보수에 드는 비용과 시간을 획기적으로 줄일 수 있고,
-> 객체를 통해 데이터를 관리하여 데이터를 손실 없이 관리하기에 용이하다.

------------------------------------------------------------------------------------------------------------------------------------------------
- 학습목표
객체지향 프로그래밍의 기본 토대인 객체를 이해할 수 있다.
객체를 만드는 데 필요한 클래스의 대한 개념을 이해하고, 클래스에 기반하여 객체를 생성할 수 있다.
클래스를 구성하는 중요한 구성요소로서 필드와 메서드, 그리고 생성자를 이해하고 활용할 수 있다.
객체지향 프로그래밍의 기초 내용을 블로깅을 통해 정리하고 기록한다.
------------------------------------------------------------------------------------------------------------------------------------------------
