---------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
- 내부 클래스(Inner Class)
: 클래스 내에 선언된 클래스로 외부 클래스와 내부 클래스가 서로 연관되어 있을 때 사용
 -> 외부 클래스의 멤버들에 쉽게 접근 가능, 코드의 복잡성이 줄어든다.

class Outer { // 외부 클래스
	
	class Inner {
		// 인스턴스 내부 클래스	
	}
	
	static class StaticInner {
		// 정적 내부 클래스
	}

	void run() {
		class LocalInner {
		// 지역 내부 클래스
		}
	}
} 

!) 내부 클래스는 외부 클래스 내에 선언한다

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
- 내부 클래스의 유형 
종 류					선언 위치							사용 가능한 변수
인스턴스 내부 클래스(instance inner class)	외부 클래스의 멤버변수 선언위치에 선언(멤버 내부 클래스)		외부 인스턴스 변수, 외부 전역 변수
정적 내부 클래스(static inner class)		외부 클래스의 멤버변수 선언위치에 선언(멤버 내부 클래스)		외부 전역 변수
지역 내부 클래스(local inner class)		외부 클래스의 메서드나 초기화블럭 안에 선언			외부 인스턴스 변수, 외부 전역 변수
익명 내부 클래스(annoymouse inner class)	클래스의 선언과 객체의 생성을 동시에 하는 일회용 익명 클래스	외부 인스턴스 변수, 외부 전역 변수

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
- 멤버 내부 클래스 
: 인스터스 내부 클래스와 정적 내부 클래스가 있다. 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
- 인스턴스 내부 클래스 
객체 내부에 멤버의 형태로 존재
외부 클래스의 모든 접근 지정자의 멤버에 접근 가능 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
- 정적 내부 클래스
내부 클래스가 외부 클래스 생성과 무관하게 정적 변수를 사용하려면 정적 내부 클래스를 선언
클래스의 멤버 변수 위치에 정의하며 static 예약어를 사용
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
- 지역 내부 클래스
 클래스의 멤버가 아닌 메서드 내에서 정의되는 클래스
지역 변수처럼 정의된 메서드 내부에서만 사용 가능 -> 선언 후 바로 객체를 생성해서 사용
메서드가 호출될 때만 메모리에 로딩 -> 정적 클래스로 지정 불가 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
- 익명 내부 클래스
이름을 알 수 없는 내부 클래스
클래스의 선언과 객체 생성을 동시에 수행 -> 하나의 객체만을 생성할 수 있으며 일회용
지역 내부 클래스와 유사
지역 내부 클래스를 일회용으로 사용하고자 할 때 익명 내부 클래스를 사용하는 것이 적합 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
